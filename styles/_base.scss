//RESET
*,*::after,*::before{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}
a{text-decoration: none;}
ul{list-style-type: none;}
button{
    border: transparent;
    text-transform: inherit;
    cursor: pointer;
}


input,select{
    font-size: inherit;
    font-family: inherit;
    border: transparent;
}
label{display: block;}
fieldset{border: none;}

body{
    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    text-transform: capitalize;
    font-size: 1rem;
    max-width: 100vw;
}
/////////////////////////////////////////////////////////////
//VARIABLES
$lg : 1024px;
:root{
    --primary-color:#FFFFFF;
    --alt-primary-color:#f0f0f0;    
    --secondary-color:#18191F;
    --tertiary-color: #F4511E;
    --alt-tertiary-color: #f4501e31;
    --border-color:#E4EBF1;;
    --alt-border-color:#BDBDBD;
    --important-text:rgb(199, 14, 14);

    --btn-search-bg-color:#23A6F0;
    --btn-large-bg-color:#E6E6E6;

    --sm-border-radius:3px;
    --m-border-radius:10px;

    --simple-shadow:rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px;
}
////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////
//MIXIN
@mixin responsive($size){
    @media (min-width: $size){
        @content;
    }
}
// this is a mixin it takes one argument which is the size of the screen
// and inside that is the standard media query syntax
// the @ content is telling SASS to drop the CSS content block in there that is the one you declare when you call in the mixin
// mixins can have varibales, and have the mixin to extend to have a content block